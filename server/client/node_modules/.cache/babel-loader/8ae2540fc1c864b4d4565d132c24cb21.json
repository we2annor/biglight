{"ast":null,"code":"const onDomLoaded = () => {\n  var lazyloadImages;\n\n  if (\"IntersectionObserver\" in window) {\n    lazyloadImages = document.querySelectorAll(\".lazy\");\n    var imageObserver = new IntersectionObserver(function (entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          var image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n    lazyloadImages.forEach(function (image) {\n      imageObserver.observe(image);\n    });\n  } else {\n    var lazyloadThrottleTimeout;\n    lazyloadImages = document.querySelectorAll(\".lazy\");\n\n    function lazyload() {\n      if (lazyloadThrottleTimeout) {\n        clearTimeout(lazyloadThrottleTimeout);\n      }\n\n      lazyloadThrottleTimeout = setTimeout(function () {\n        var scrollTop = window.pageYOffset;\n        lazyloadImages.forEach(function (img) {\n          if (img.offsetTop < window.innerHeight + scrollTop) {\n            img.src = img.dataset.src;\n            img.classList.remove(\"lazy\");\n          }\n        });\n\n        if (lazyloadImages.length === 0) {\n          document.removeEventListener(\"scroll\", lazyload);\n          window.removeEventListener(\"resize\", lazyload);\n          window.removeEventListener(\"orientationChange\", lazyload);\n        }\n      }, 20);\n    }\n\n    document.addEventListener(\"scroll\", lazyload);\n    window.addEventListener(\"resize\", lazyload);\n    window.addEventListener(\"orientationChange\", lazyload);\n  }\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["onDomLoaded","lazyloadImages","window","document","querySelectorAll","imageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","image","target","src","dataset","classList","remove","unobserve","observe","lazyloadThrottleTimeout","lazyload","clearTimeout","setTimeout","scrollTop","pageYOffset","img","offsetTop","innerHeight","length","removeEventListener","addEventListener","lazyLoad"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAM;AACxB,MAAIC,cAAJ;;AAEA,MAAI,0BAA0BC,MAA9B,EAAsC;AACpCD,IAAAA,cAAc,GAAGE,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAjB;AACA,QAAIC,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AACxED,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,KAAV,EAAiB;AAC/B,YAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,cAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,UAAAA,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACG,OAAN,CAAcD,GAA1B;AACAF,UAAAA,KAAK,CAACI,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAZ,UAAAA,aAAa,CAACa,SAAd,CAAwBN,KAAxB;AACD;AACF,OAPD;AAQD,KATmB,CAApB;AAWAX,IAAAA,cAAc,CAACQ,OAAf,CAAuB,UAAUG,KAAV,EAAiB;AACtCP,MAAAA,aAAa,CAACc,OAAd,CAAsBP,KAAtB;AACD,KAFD;AAGD,GAhBD,MAgBO;AACL,QAAIQ,uBAAJ;AACAnB,IAAAA,cAAc,GAAGE,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAjB;;AAEA,aAASiB,QAAT,GAAoB;AAClB,UAAID,uBAAJ,EAA6B;AAC3BE,QAAAA,YAAY,CAACF,uBAAD,CAAZ;AACD;;AAEDA,MAAAA,uBAAuB,GAAGG,UAAU,CAAC,YAAY;AAC/C,YAAIC,SAAS,GAAGtB,MAAM,CAACuB,WAAvB;AACAxB,QAAAA,cAAc,CAACQ,OAAf,CAAuB,UAAUiB,GAAV,EAAe;AACpC,cAAIA,GAAG,CAACC,SAAJ,GAAgBzB,MAAM,CAAC0B,WAAP,GAAqBJ,SAAzC,EAAoD;AAClDE,YAAAA,GAAG,CAACZ,GAAJ,GAAUY,GAAG,CAACX,OAAJ,CAAYD,GAAtB;AACAY,YAAAA,GAAG,CAACV,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,SALD;;AAMA,YAAIhB,cAAc,CAAC4B,MAAf,KAA0B,CAA9B,EAAiC;AAC/B1B,UAAAA,QAAQ,CAAC2B,mBAAT,CAA6B,QAA7B,EAAuCT,QAAvC;AACAnB,UAAAA,MAAM,CAAC4B,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC;AACAnB,UAAAA,MAAM,CAAC4B,mBAAP,CAA2B,mBAA3B,EAAgDT,QAAhD;AACD;AACF,OAbmC,EAajC,EAbiC,CAApC;AAcD;;AAEDlB,IAAAA,QAAQ,CAAC4B,gBAAT,CAA0B,QAA1B,EAAoCV,QAApC;AACAnB,IAAAA,MAAM,CAAC6B,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACAnB,IAAAA,MAAM,CAAC6B,gBAAP,CAAwB,mBAAxB,EAA6CV,QAA7C;AACD;AACF,CAhDD;;AAkDA,OAAO,MAAMW,QAAQ,GAAG,MAAM;AAC5B7B,EAAAA,QAAQ,CAAC4B,gBAAT,CAA0B,kBAA1B,EAA8C/B,WAAW,EAAzD;AACD,CAFM","sourcesContent":["const onDomLoaded = () => {\n  var lazyloadImages;\n\n  if (\"IntersectionObserver\" in window) {\n    lazyloadImages = document.querySelectorAll(\".lazy\");\n    var imageObserver = new IntersectionObserver(function (entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          var image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n\n    lazyloadImages.forEach(function (image) {\n      imageObserver.observe(image);\n    });\n  } else {\n    var lazyloadThrottleTimeout;\n    lazyloadImages = document.querySelectorAll(\".lazy\");\n\n    function lazyload() {\n      if (lazyloadThrottleTimeout) {\n        clearTimeout(lazyloadThrottleTimeout);\n      }\n\n      lazyloadThrottleTimeout = setTimeout(function () {\n        var scrollTop = window.pageYOffset;\n        lazyloadImages.forEach(function (img) {\n          if (img.offsetTop < window.innerHeight + scrollTop) {\n            img.src = img.dataset.src;\n            img.classList.remove(\"lazy\");\n          }\n        });\n        if (lazyloadImages.length === 0) {\n          document.removeEventListener(\"scroll\", lazyload);\n          window.removeEventListener(\"resize\", lazyload);\n          window.removeEventListener(\"orientationChange\", lazyload);\n        }\n      }, 20);\n    }\n\n    document.addEventListener(\"scroll\", lazyload);\n    window.addEventListener(\"resize\", lazyload);\n    window.addEventListener(\"orientationChange\", lazyload);\n  }\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}