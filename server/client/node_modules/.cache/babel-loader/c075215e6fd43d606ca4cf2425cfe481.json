{"ast":null,"code":"const onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n\n  const throttleTimeout = () => {\n    setTimeout(timeOut(), 20);\n  };\n\n  const clearTimeOut = () => {\n    if (throttleTimeout) {\n      clearTimeout(throttleTimeout);\n    }\n  };\n\n  const timeOut = () => {\n    var scrollTop = window.pageYOffset;\n    images.forEach(function (img) {\n      if (img.offsetTop < window.innerHeight + scrollTop) {\n        img.src = img.dataset.src;\n        img.classList.remove(\"lazy\");\n      }\n    });\n\n    if (images.length === 0) {\n      document.removeEventListener(\"scroll\", lazyLoad);\n      window.removeEventListener(\"resize\", lazyLoad);\n      window.removeEventListener(\"orientationChange\", lazyLoad);\n    }\n  };\n\n  if (\"IntersectionObserver\" in window) {\n    const imageObserver = new IntersectionObserver(function (entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          var image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n    images.forEach(function (image) {\n      imageObserver.observe(image);\n    });\n  } else {\n    throttleTimeout();\n  }\n\n  document.addEventListener(\"scroll\", lazyLoad);\n  window.addEventListener(\"resize\", lazyLoad);\n  window.addEventListener(\"orientationChange\", lazyLoad);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["onDomLoaded","images","document","querySelectorAll","throttleTimeout","setTimeout","timeOut","clearTimeOut","clearTimeout","scrollTop","window","pageYOffset","forEach","img","offsetTop","innerHeight","src","dataset","classList","remove","length","removeEventListener","lazyLoad","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","unobserve","observe","addEventListener"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAf;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BC,IAAAA,UAAU,CAACC,OAAO,EAAR,EAAY,EAAZ,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIH,eAAJ,EAAqB;AACnBI,MAAAA,YAAY,CAACJ,eAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAME,OAAO,GAAG,MAAM;AACpB,QAAIG,SAAS,GAAGC,MAAM,CAACC,WAAvB;AACAV,IAAAA,MAAM,CAACW,OAAP,CAAe,UAAUC,GAAV,EAAe;AAC5B,UAAIA,GAAG,CAACC,SAAJ,GAAgBJ,MAAM,CAACK,WAAP,GAAqBN,SAAzC,EAAoD;AAClDI,QAAAA,GAAG,CAACG,GAAJ,GAAUH,GAAG,CAACI,OAAJ,CAAYD,GAAtB;AACAH,QAAAA,GAAG,CAACK,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,KALD;;AAMA,QAAIlB,MAAM,CAACmB,MAAP,KAAkB,CAAtB,EAAyB;AACvBlB,MAAAA,QAAQ,CAACmB,mBAAT,CAA6B,QAA7B,EAAuCC,QAAvC;AACAZ,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCC,QAArC;AACAZ,MAAAA,MAAM,CAACW,mBAAP,CAA2B,mBAA3B,EAAgDC,QAAhD;AACD;AACF,GAbD;;AAeA,MAAI,0BAA0BZ,MAA9B,EAAsC;AACpC,UAAMa,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,UAC7CC,OAD6C,EAE7CC,QAF6C,EAG7C;AACAD,MAAAA,OAAO,CAACb,OAAR,CAAgB,UAAUe,KAAV,EAAiB;AAC/B,YAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,cAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,UAAAA,KAAK,CAACb,GAAN,GAAYa,KAAK,CAACZ,OAAN,CAAcD,GAA1B;AACAa,UAAAA,KAAK,CAACX,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAI,UAAAA,aAAa,CAACQ,SAAd,CAAwBF,KAAxB;AACD;AACF,OAPD;AAQD,KAZqB,CAAtB;AAcA5B,IAAAA,MAAM,CAACW,OAAP,CAAe,UAAUiB,KAAV,EAAiB;AAC9BN,MAAAA,aAAa,CAACS,OAAd,CAAsBH,KAAtB;AACD,KAFD;AAGD,GAlBD,MAkBO;AACLzB,IAAAA,eAAe;AAChB;;AAEDF,EAAAA,QAAQ,CAAC+B,gBAAT,CAA0B,QAA1B,EAAoCX,QAApC;AACAZ,EAAAA,MAAM,CAACuB,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACAZ,EAAAA,MAAM,CAACuB,gBAAP,CAAwB,mBAAxB,EAA6CX,QAA7C;AACD,CArDD;;AAuDA,OAAO,MAAMA,QAAQ,GAAG,MAAM;AAC5BpB,EAAAA,QAAQ,CAAC+B,gBAAT,CAA0B,kBAA1B,EAA8CjC,WAAW,EAAzD;AACD,CAFM","sourcesContent":["const onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n\n  const throttleTimeout = () => {\n    setTimeout(timeOut(), 20);\n  };\n\n  const clearTimeOut = () => {\n    if (throttleTimeout) {\n      clearTimeout(throttleTimeout);\n    }\n  };\n\n  const timeOut = () => {\n    var scrollTop = window.pageYOffset;\n    images.forEach(function (img) {\n      if (img.offsetTop < window.innerHeight + scrollTop) {\n        img.src = img.dataset.src;\n        img.classList.remove(\"lazy\");\n      }\n    });\n    if (images.length === 0) {\n      document.removeEventListener(\"scroll\", lazyLoad);\n      window.removeEventListener(\"resize\", lazyLoad);\n      window.removeEventListener(\"orientationChange\", lazyLoad);\n    }\n  };\n\n  if (\"IntersectionObserver\" in window) {\n    const imageObserver = new IntersectionObserver(function (\n      entries,\n      observer\n    ) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          var image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n\n    images.forEach(function (image) {\n      imageObserver.observe(image);\n    });\n  } else {\n    throttleTimeout();\n  }\n\n  document.addEventListener(\"scroll\", lazyLoad);\n  window.addEventListener(\"resize\", lazyLoad);\n  window.addEventListener(\"orientationChange\", lazyLoad);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}