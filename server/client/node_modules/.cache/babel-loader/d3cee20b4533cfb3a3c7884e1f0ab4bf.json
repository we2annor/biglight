{"ast":null,"code":"const onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n  const scrollTop = window.pageYOffset;\n\n  const throttleTimeout = () => {\n    setTimeout(timeOut(), 20);\n  };\n\n  const clearTimeOut = () => {\n    if (throttleTimeout) {\n      clearTimeout(throttleTimeout);\n    }\n  };\n\n  const timeOut = () => {\n    images.forEach(img => {\n      if (img.offsetTop < window.innerHeight + scrollTop) {\n        img.src = img.dataset.src;\n        img.classList.remove(\"lazy\");\n      }\n    });\n\n    if (images.length === 0) {\n      document.removeEventListener(\"scroll\", clearTimeOut);\n      window.removeEventListener(\"resize\", clearTimeOut);\n      window.removeEventListener(\"orientationChange\", clearTimeOut);\n    }\n  };\n\n  if (\"IntersectionObserver\" in window) {\n    const imageObserver = new IntersectionObserver(function (entries, observer) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          let image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n    images.forEach(image => {\n      imageObserver.observe(image);\n    });\n  } else {\n    throttleTimeout();\n  }\n\n  document.addEventListener(\"scroll\", lazyLoad);\n  window.addEventListener(\"resize\", lazyLoad);\n  window.addEventListener(\"orientationChange\", lazyLoad);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["onDomLoaded","images","document","querySelectorAll","scrollTop","window","pageYOffset","throttleTimeout","setTimeout","timeOut","clearTimeOut","clearTimeout","forEach","img","offsetTop","innerHeight","src","dataset","classList","remove","length","removeEventListener","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","unobserve","observe","addEventListener","lazyLoad"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAf;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,WAAzB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BC,IAAAA,UAAU,CAACC,OAAO,EAAR,EAAY,EAAZ,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIH,eAAJ,EAAqB;AACnBI,MAAAA,YAAY,CAACJ,eAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAME,OAAO,GAAG,MAAM;AACpBR,IAAAA,MAAM,CAACW,OAAP,CAAgBC,GAAD,IAAS;AACtB,UAAIA,GAAG,CAACC,SAAJ,GAAgBT,MAAM,CAACU,WAAP,GAAqBX,SAAzC,EAAoD;AAClDS,QAAAA,GAAG,CAACG,GAAJ,GAAUH,GAAG,CAACI,OAAJ,CAAYD,GAAtB;AACAH,QAAAA,GAAG,CAACK,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,KALD;;AAMA,QAAIlB,MAAM,CAACmB,MAAP,KAAkB,CAAtB,EAAyB;AACvBlB,MAAAA,QAAQ,CAACmB,mBAAT,CAA6B,QAA7B,EAAuCX,YAAvC;AACAL,MAAAA,MAAM,CAACgB,mBAAP,CAA2B,QAA3B,EAAqCX,YAArC;AACAL,MAAAA,MAAM,CAACgB,mBAAP,CAA2B,mBAA3B,EAAgDX,YAAhD;AACD;AACF,GAZD;;AAcA,MAAI,0BAA0BL,MAA9B,EAAsC;AACpC,UAAMiB,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,UAC7CC,OAD6C,EAE7CC,QAF6C,EAG7C;AACAD,MAAAA,OAAO,CAACZ,OAAR,CAAiBc,KAAD,IAAW;AACzB,YAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,cAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,UAAAA,KAAK,CAACZ,GAAN,GAAYY,KAAK,CAACX,OAAN,CAAcD,GAA1B;AACAY,UAAAA,KAAK,CAACV,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAG,UAAAA,aAAa,CAACQ,SAAd,CAAwBF,KAAxB;AACD;AACF,OAPD;AAQD,KAZqB,CAAtB;AAcA3B,IAAAA,MAAM,CAACW,OAAP,CAAgBgB,KAAD,IAAW;AACxBN,MAAAA,aAAa,CAACS,OAAd,CAAsBH,KAAtB;AACD,KAFD;AAGD,GAlBD,MAkBO;AACLrB,IAAAA,eAAe;AAChB;;AAEDL,EAAAA,QAAQ,CAAC8B,gBAAT,CAA0B,QAA1B,EAAoCC,QAApC;AACA5B,EAAAA,MAAM,CAAC2B,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC;AACA5B,EAAAA,MAAM,CAAC2B,gBAAP,CAAwB,mBAAxB,EAA6CC,QAA7C;AACD,CArDD;;AAuDA,OAAO,MAAMA,QAAQ,GAAG,MAAM;AAC5B/B,EAAAA,QAAQ,CAAC8B,gBAAT,CAA0B,kBAA1B,EAA8ChC,WAAW,EAAzD;AACD,CAFM","sourcesContent":["const onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n  const scrollTop = window.pageYOffset;\n\n  const throttleTimeout = () => {\n    setTimeout(timeOut(), 20);\n  };\n\n  const clearTimeOut = () => {\n    if (throttleTimeout) {\n      clearTimeout(throttleTimeout);\n    }\n  };\n\n  const timeOut = () => {\n    images.forEach((img) => {\n      if (img.offsetTop < window.innerHeight + scrollTop) {\n        img.src = img.dataset.src;\n        img.classList.remove(\"lazy\");\n      }\n    });\n    if (images.length === 0) {\n      document.removeEventListener(\"scroll\", clearTimeOut);\n      window.removeEventListener(\"resize\", clearTimeOut);\n      window.removeEventListener(\"orientationChange\", clearTimeOut);\n    }\n  };\n\n  if (\"IntersectionObserver\" in window) {\n    const imageObserver = new IntersectionObserver(function (\n      entries,\n      observer\n    ) {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          let image = entry.target;\n          image.src = image.dataset.src;\n          image.classList.remove(\"lazy\");\n          imageObserver.unobserve(image);\n        }\n      });\n    });\n\n    images.forEach((image) => {\n      imageObserver.observe(image);\n    });\n  } else {\n    throttleTimeout();\n  }\n\n  document.addEventListener(\"scroll\", lazyLoad);\n  window.addEventListener(\"resize\", lazyLoad);\n  window.addEventListener(\"orientationChange\", lazyLoad);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}