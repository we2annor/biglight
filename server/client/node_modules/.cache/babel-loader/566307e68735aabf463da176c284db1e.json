{"ast":null,"code":"const throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  images.forEach(img => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.src = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  const imageObserver = new IntersectionObserver(function (entries, observer) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.src = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n  images.forEach(image => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n  const scrollTop = window.pageYOffset;\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["throttleTimeout","setTimeout","timeOut","load","clearTimeout","images","forEach","img","offsetTop","window","innerHeight","scrollTop","src","dataset","classList","remove","length","document","removeEventListener","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","unobserve","observe","onDomLoaded","querySelectorAll","pageYOffset","addEventListener","lazyLoad"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAM;AAC5BC,EAAAA,UAAU,CAACC,OAAO,EAAR,EAAY,EAAZ,CAAV;AACD,CAFD;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB,MAAIH,eAAJ,EAAqB;AACnBI,IAAAA,YAAY,CAACJ,eAAD,CAAZ;AACD;AACF,CAJD;;AAMA,MAAME,OAAO,GAAG,MAAM;AACpBG,EAAAA,MAAM,CAACC,OAAP,CAAgBC,GAAD,IAAS;AACtB,QAAIA,GAAG,CAACC,SAAJ,GAAgBC,MAAM,CAACC,WAAP,GAAqBC,SAAzC,EAAoD;AAClDJ,MAAAA,GAAG,CAACK,GAAJ,GAAUL,GAAG,CAACM,OAAJ,CAAYD,GAAtB;AACAL,MAAAA,GAAG,CAACO,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,GALD;;AAMA,MAAIV,MAAM,CAACW,MAAP,KAAkB,CAAtB,EAAyB;AACvBC,IAAAA,QAAQ,CAACC,mBAAT,CAA6B,QAA7B,EAAuCf,IAAvC;AACAM,IAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCf,IAArC;AACAM,IAAAA,MAAM,CAACS,mBAAP,CAA2B,mBAA3B,EAAgDf,IAAhD;AACD;AACF,CAZD;;AAcA,IAAI,0BAA0BM,MAA9B,EAAsC;AACpC,QAAMU,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC1ED,IAAAA,OAAO,CAACf,OAAR,CAAiBiB,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,YAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,QAAAA,KAAK,CAACb,GAAN,GAAYa,KAAK,CAACZ,OAAN,CAAcD,GAA1B;AACAa,QAAAA,KAAK,CAACX,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAI,QAAAA,aAAa,CAACQ,SAAd,CAAwBF,KAAxB;AACD;AACF,KAPD;AAQD,GATqB,CAAtB;AAWApB,EAAAA,MAAM,CAACC,OAAP,CAAgBmB,KAAD,IAAW;AACxBN,IAAAA,aAAa,CAACS,OAAd,CAAsBH,KAAtB;AACD,GAFD;AAGD,CAfD,MAeO;AACLzB,EAAAA,eAAe;AAChB;;AAED,MAAM6B,WAAW,GAAG,MAAM;AACxB,QAAMxB,MAAM,GAAGY,QAAQ,CAACa,gBAAT,CAA0B,OAA1B,CAAf;AACA,QAAMnB,SAAS,GAAGF,MAAM,CAACsB,WAAzB;AAEAd,EAAAA,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,EAAoC7B,IAApC;AACAM,EAAAA,MAAM,CAACuB,gBAAP,CAAwB,QAAxB,EAAkC7B,IAAlC;AACAM,EAAAA,MAAM,CAACuB,gBAAP,CAAwB,mBAAxB,EAA6C7B,IAA7C;AACD,CAPD;;AASA,OAAO,MAAM8B,QAAQ,GAAG,MAAM;AAC5BhB,EAAAA,QAAQ,CAACe,gBAAT,CAA0B,kBAA1B,EAA8CH,WAAW,EAAzD;AACD,CAFM","sourcesContent":["const throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  images.forEach((img) => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.src = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  const imageObserver = new IntersectionObserver(function (entries, observer) {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.src = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n\n  images.forEach((image) => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  const images = document.querySelectorAll(\".lazy\");\n  const scrollTop = window.pageYOffset;\n\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}