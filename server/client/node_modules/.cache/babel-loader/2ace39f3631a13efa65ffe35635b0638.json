{"ast":null,"code":"const images = document.querySelectorAll(\".lazy\");\nconst scrollTop = window.pageYOffset;\n\nconst throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  console.log(\"load called\");\n\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  images.forEach(img => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.src = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  const imageObserver = new IntersectionObserver(function (entries, observer) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.src = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n  images.forEach(image => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  console.log(\"onDomloaded called\");\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  console.log(\"lazy load called\");\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["images","document","querySelectorAll","scrollTop","window","pageYOffset","throttleTimeout","setTimeout","timeOut","load","console","log","clearTimeout","forEach","img","offsetTop","innerHeight","src","dataset","classList","remove","length","removeEventListener","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","unobserve","observe","onDomLoaded","addEventListener","lazyLoad"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAf;AACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,WAAzB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5BC,EAAAA,UAAU,CAACC,OAAO,EAAR,EAAY,EAAZ,CAAV;AACD,CAFD;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,MAAIL,eAAJ,EAAqB;AACnBM,IAAAA,YAAY,CAACN,eAAD,CAAZ;AACD;AACF,CALD;;AAOA,MAAME,OAAO,GAAG,MAAM;AACpBR,EAAAA,MAAM,CAACa,OAAP,CAAgBC,GAAD,IAAS;AACtB,QAAIA,GAAG,CAACC,SAAJ,GAAgBX,MAAM,CAACY,WAAP,GAAqBb,SAAzC,EAAoD;AAClDW,MAAAA,GAAG,CAACG,GAAJ,GAAUH,GAAG,CAACI,OAAJ,CAAYD,GAAtB;AACAH,MAAAA,GAAG,CAACK,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,GALD;;AAMA,MAAIpB,MAAM,CAACqB,MAAP,KAAkB,CAAtB,EAAyB;AACvBpB,IAAAA,QAAQ,CAACqB,mBAAT,CAA6B,QAA7B,EAAuCb,IAAvC;AACAL,IAAAA,MAAM,CAACkB,mBAAP,CAA2B,QAA3B,EAAqCb,IAArC;AACAL,IAAAA,MAAM,CAACkB,mBAAP,CAA2B,mBAA3B,EAAgDb,IAAhD;AACD;AACF,CAZD;;AAcA,IAAI,0BAA0BL,MAA9B,EAAsC;AACpC,QAAMmB,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC1ED,IAAAA,OAAO,CAACZ,OAAR,CAAiBc,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,YAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,QAAAA,KAAK,CAACZ,GAAN,GAAYY,KAAK,CAACX,OAAN,CAAcD,GAA1B;AACAY,QAAAA,KAAK,CAACV,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAG,QAAAA,aAAa,CAACQ,SAAd,CAAwBF,KAAxB;AACD;AACF,KAPD;AAQD,GATqB,CAAtB;AAWA7B,EAAAA,MAAM,CAACa,OAAP,CAAgBgB,KAAD,IAAW;AACxBN,IAAAA,aAAa,CAACS,OAAd,CAAsBH,KAAtB;AACD,GAFD;AAGD,CAfD,MAeO;AACLvB,EAAAA,eAAe;AAChB;;AAED,MAAM2B,WAAW,GAAG,MAAM;AACxBvB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAV,EAAAA,QAAQ,CAACiC,gBAAT,CAA0B,QAA1B,EAAoCzB,IAApC;AACAL,EAAAA,MAAM,CAAC8B,gBAAP,CAAwB,QAAxB,EAAkCzB,IAAlC;AACAL,EAAAA,MAAM,CAAC8B,gBAAP,CAAwB,mBAAxB,EAA6CzB,IAA7C;AACD,CALD;;AAOA,OAAO,MAAM0B,QAAQ,GAAG,MAAM;AAC5BzB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAV,EAAAA,QAAQ,CAACiC,gBAAT,CAA0B,kBAA1B,EAA8CD,WAAW,EAAzD;AACD,CAHM","sourcesContent":["const images = document.querySelectorAll(\".lazy\");\nconst scrollTop = window.pageYOffset;\n\nconst throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  console.log(\"load called\");\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  images.forEach((img) => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.src = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  const imageObserver = new IntersectionObserver(function (entries, observer) {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.src = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n\n  images.forEach((image) => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  console.log(\"onDomloaded called\");\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  console.log(\"lazy load called\");\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}