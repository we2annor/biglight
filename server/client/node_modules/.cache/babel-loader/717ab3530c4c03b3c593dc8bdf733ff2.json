{"ast":null,"code":"let images = [];\nconst scrollTop = window.pageYOffset;\n\nconst throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  console.log(\"ima\", images);\n  images = document.querySelectorAll(\"img.lazy\");\n  images.forEach(img => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.srcset = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  images = document.querySelectorAll(\"img.lazy\");\n  const imageObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.srcset = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n  images.forEach(image => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  images = document.querySelectorAll(\"img.lazy\");\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};","map":{"version":3,"sources":["/Users/ernest/Desktop/biglight/server/client/src/util/lazy.js"],"names":["images","scrollTop","window","pageYOffset","throttleTimeout","setTimeout","timeOut","load","clearTimeout","console","log","document","querySelectorAll","forEach","img","offsetTop","innerHeight","srcset","dataset","src","classList","remove","length","removeEventListener","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","image","target","unobserve","observe","onDomLoaded","addEventListener","lazyLoad"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAb;AACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,WAAzB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5BC,EAAAA,UAAU,CAACC,OAAO,EAAR,EAAY,EAAZ,CAAV;AACD,CAFD;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB,MAAIH,eAAJ,EAAqB;AACnBI,IAAAA,YAAY,CAACJ,eAAD,CAAZ;AACD;AACF,CAJD;;AAMA,MAAME,OAAO,GAAG,MAAM;AACpBG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBV,MAAnB;AACAA,EAAAA,MAAM,GAAGW,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAT;AACAZ,EAAAA,MAAM,CAACa,OAAP,CAAgBC,GAAD,IAAS;AACtB,QAAIA,GAAG,CAACC,SAAJ,GAAgBb,MAAM,CAACc,WAAP,GAAqBf,SAAzC,EAAoD;AAClDa,MAAAA,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,OAAJ,CAAYC,GAAzB;AACAL,MAAAA,GAAG,CAACM,SAAJ,CAAcC,MAAd,CAAqB,MAArB;AACD;AACF,GALD;;AAMA,MAAIrB,MAAM,CAACsB,MAAP,KAAkB,CAAtB,EAAyB;AACvBX,IAAAA,QAAQ,CAACY,mBAAT,CAA6B,QAA7B,EAAuChB,IAAvC;AACAL,IAAAA,MAAM,CAACqB,mBAAP,CAA2B,QAA3B,EAAqChB,IAArC;AACAL,IAAAA,MAAM,CAACqB,mBAAP,CAA2B,mBAA3B,EAAgDhB,IAAhD;AACD;AACF,CAdD;;AAgBA,IAAI,0BAA0BL,MAA9B,EAAsC;AACpCF,EAAAA,MAAM,GAAGW,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAT;AACA,QAAMY,aAAa,GAAG,IAAIC,oBAAJ,CAAyB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACpED,IAAAA,OAAO,CAACb,OAAR,CAAiBe,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,YAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACAD,QAAAA,KAAK,CAACb,MAAN,GAAea,KAAK,CAACZ,OAAN,CAAcC,GAA7B;AACAW,QAAAA,KAAK,CAACV,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAG,QAAAA,aAAa,CAACQ,SAAd,CAAwBF,KAAxB;AACD;AACF,KAPD;AAQD,GATqB,CAAtB;AAUA9B,EAAAA,MAAM,CAACa,OAAP,CAAgBiB,KAAD,IAAW;AACxBN,IAAAA,aAAa,CAACS,OAAd,CAAsBH,KAAtB;AACD,GAFD;AAGD,CAfD,MAeO;AACL1B,EAAAA,eAAe;AAChB;;AAED,MAAM8B,WAAW,GAAG,MAAM;AACxBvB,EAAAA,QAAQ,CAACwB,gBAAT,CAA0B,QAA1B,EAAoC5B,IAApC;AACAL,EAAAA,MAAM,CAACiC,gBAAP,CAAwB,QAAxB,EAAkC5B,IAAlC;AACAL,EAAAA,MAAM,CAACiC,gBAAP,CAAwB,mBAAxB,EAA6C5B,IAA7C;AACD,CAJD;;AAMA,OAAO,MAAM6B,QAAQ,GAAG,MAAM;AAC5BpC,EAAAA,MAAM,GAAGW,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAT;AACAD,EAAAA,QAAQ,CAACwB,gBAAT,CAA0B,kBAA1B,EAA8CD,WAAW,EAAzD;AACD,CAHM","sourcesContent":["let images = [];\nconst scrollTop = window.pageYOffset;\n\nconst throttleTimeout = () => {\n  setTimeout(timeOut(), 20);\n};\n\nconst load = () => {\n  if (throttleTimeout) {\n    clearTimeout(throttleTimeout);\n  }\n};\n\nconst timeOut = () => {\n  console.log(\"ima\", images);\n  images = document.querySelectorAll(\"img.lazy\");\n  images.forEach((img) => {\n    if (img.offsetTop < window.innerHeight + scrollTop) {\n      img.srcset = img.dataset.src;\n      img.classList.remove(\"lazy\");\n    }\n  });\n  if (images.length === 0) {\n    document.removeEventListener(\"scroll\", load);\n    window.removeEventListener(\"resize\", load);\n    window.removeEventListener(\"orientationChange\", load);\n  }\n};\n\nif (\"IntersectionObserver\" in window) {\n  images = document.querySelectorAll(\"img.lazy\");\n  const imageObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        let image = entry.target;\n        image.srcset = image.dataset.src;\n        image.classList.remove(\"lazy\");\n        imageObserver.unobserve(image);\n      }\n    });\n  });\n  images.forEach((image) => {\n    imageObserver.observe(image);\n  });\n} else {\n  throttleTimeout();\n}\n\nconst onDomLoaded = () => {\n  document.addEventListener(\"scroll\", load);\n  window.addEventListener(\"resize\", load);\n  window.addEventListener(\"orientationChange\", load);\n};\n\nexport const lazyLoad = () => {\n  images = document.querySelectorAll(\"img.lazy\");\n  document.addEventListener(\"DOMContentLoaded\", onDomLoaded());\n};\n"]},"metadata":{},"sourceType":"module"}